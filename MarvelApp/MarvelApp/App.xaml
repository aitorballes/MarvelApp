<?xml version="1.0" encoding="utf-8" ?>
<prism:PrismApplication xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:prism="http://prismlibrary.com"
             xmlns:n4TCar="clr-namespace:MarvelApp;assembly=MarvelApp"
             xmlns:controls="clr-namespace:MarvelApp.Controls;assembly=MarvelApp"
             x:Class="MarvelApp.App">
    <prism:PrismApplication.Resources>
        
        <!-- Global default styles -->
        <Style TargetType="ContentPage" ApplyToDerivedTypes="True">
            <Setter Property="BackgroundColor" Value="{x:Static n4TCar:Theme.PageBackgroundColor}" />
        </Style>
        <Style TargetType="Frame" ApplyToDerivedTypes="True">
            <Setter Property="BackgroundColor" Value="{x:Static n4TCar:Theme.FrameBackGroundColor}" />
        </Style>
        
         <!-- Regular Label -->
        <Style x:Key="RegularLabelStyle" TargetType="Label">
            <Setter Property="FontSize" Value="{x:Static n4TCar:Theme.NormalFont}" />
            <Setter Property="TextColor" Value="{x:Static n4TCar:Theme.PrimaryColor}" />
            <Setter Property="LineBreakMode" Value="TailTruncation" />
        </Style>
        <Style TargetType="Label" BasedOn="{StaticResource RegularLabelStyle}" />
        <!-- Paragraph Label -->
        <Style x:Key="ParagraphStyle" TargetType="Label" BasedOn="{StaticResource RegularLabelStyle}">
            <Setter Property="LineBreakMode" Value="WordWrap" />
        </Style>
        <!-- Mini Label -->
        <Style x:Key="MiniLabelStyle" TargetType="Label" BasedOn="{StaticResource RegularLabelStyle}">
            <Setter Property="FontSize" Value="{x:Static n4TCar:Theme.MiniFont}" />
        </Style>
        <!-- Small Label -->
        <Style x:Key="SmallLabelStyle" TargetType="Label" BasedOn="{StaticResource RegularLabelStyle}">
            <Setter Property="FontSize" Value="{x:Static n4TCar:Theme.SmallFont}" />
        </Style>
        <!-- Medium Label -->
        <Style x:Key="MediumLabelStyle" TargetType="Label" BasedOn="{StaticResource RegularLabelStyle}">
            <Setter Property="FontSize" Value="{x:Static n4TCar:Theme.MediumFont}" />
        </Style>
        <!-- Large Label -->
        <Style x:Key="LargeLabelStyle" TargetType="Label" BasedOn="{StaticResource RegularLabelStyle}">
            <Setter Property="FontSize" Value="{x:Static n4TCar:Theme.LargeFont}" />
        </Style>
        <!-- Light Label -->
        <Style x:Key="LightLabelStyle" TargetType="Label" BasedOn="{StaticResource RegularLabelStyle}">
            <Setter Property="TextColor" Value="{x:Static n4TCar:Theme.SecondaryColor}" />
        </Style>
        <!-- Small Light Label -->
        <Style x:Key="SmallLightLabelStyle" TargetType="Label" BasedOn="{StaticResource LightLabelStyle}">
            <Setter Property="FontSize" Value="{x:Static n4TCar:Theme.SmallFont}" />
        </Style>
        <!-- Mini Light Label -->
        <Style x:Key="MiniLightLabelStyle" TargetType="Label" BasedOn="{StaticResource LightLabelStyle}">
            <Setter Property="FontSize" Value="{x:Static n4TCar:Theme.MiniFont}" />
        </Style>
        <!-- Primary Button Styles -->
        <Style x:Key="PrimaryButtonStyle" TargetType="controls:CustomButton">
            <Setter Property="HeightRequest" Value="{x:Static n4TCar:Theme.PrimaryButtonHeight}" />
            <Setter Property="FontSize" Value="{x:Static n4TCar:Theme.PrimaryButtonFontSize}" />
            <Setter Property="CornerRadius" Value="{x:Static n4TCar:Theme.PrimaryButtonCornerRadius}" />
            <Setter Property="BorderWidth" Value="{x:Static n4TCar:Theme.PrimaryButtonBorderWidth}" />
            <Setter Property="BorderColor" Value="{x:Static n4TCar:Theme.PrimaryButtonBorderColor}" />
            <Setter Property="BackgroundColor" Value="{x:Static n4TCar:Theme.PrimaryButtonBackgroundColor}" />
            <Setter Property="TextColor" Value="{x:Static n4TCar:Theme.PrimaryButtonTextColor}" />
            <Setter Property="Uppercase" Value="False" />
            <Setter Property="HorizontalOptions" Value="FillAndExpand" />
            <Style.Triggers>
                <Trigger Property="controls:CustomButton.IsEnabled" Value="False" TargetType="controls:CustomButton">
                    <Setter Property="Opacity" Value="{x:Static n4TCar:Theme.PrimaryButtonDisabledOpacity}" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <!-- Button Link -->
        <Style x:Key="LinkButtonStyle" TargetType="controls:CustomButton">
            <Setter Property="MinimumHeightRequest" Value="{x:Static n4TCar:Theme.LinkButtonHeight}" />
            <Setter Property="HeightRequest" Value="-1" />
            <Setter Property="BackgroundColor" Value="{x:Static n4TCar:Theme.LinkButtonBackgroundColor}" />
            <Setter Property="TextColor" Value="{x:Static n4TCar:Theme.LinkButtonTextColor}" />
            <Setter Property="ImageTintColor" Value="{x:Static n4TCar:Theme.LinkButtonTextColor}" />
            <Setter Property="Uppercase" Value="False" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="HorizontalOptions" Value="CenterAndExpand" />
            <Style.Triggers>
                <Trigger Property="controls:CustomButton.IsEnabled" Value="False" TargetType="controls:CustomButton">
                    <Setter Property="Opacity" Value="{x:Static n4TCar:Theme.LinkButtonDisabledOpacity}" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <!-- Button Icon -->
        
        <Style x:Key="IconButtonStyle" TargetType="controls:CustomButton" BasedOn="{StaticResource LinkButtonStyle}">
            <Setter Property="HeightRequest" Value="30" />
            <Setter Property="WidthRequest" Value="30" />
            <Setter Property="ContentLayout" Value="Top,0" />
            <Setter Property="ImageTintColor" Value="{x:Static n4TCar:Theme.LinkButtonTextColor}" />
            <Style.Triggers>
                <Trigger Property="controls:CustomButton.IsEnabled" Value="False" TargetType="controls:CustomButton">
                    <Setter Property="Opacity" Value="{x:Static n4TCar:Theme.LinkButtonDisabledOpacity}" />
                </Trigger>
            </Style.Triggers>
        </Style>

    </prism:PrismApplication.Resources>
</prism:PrismApplication>